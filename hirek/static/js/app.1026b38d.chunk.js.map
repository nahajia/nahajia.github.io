{"version":3,"sources":["App.js"],"names":["App","props","szovegvaltoztat","be","setState","szoveg","kereses","getMovies","state","data","isLoading","a","async","ugras","this","fetch","response","json","articles","console","log","style","flex","padding","fontSize","height","backgroundColor","placeholder","onChangeText","value","styles","button","onPress","keyExtractor","index","id","renderItem","item","alignItems","width","source","uri","urlToImage","textAlign","title","description","content","fontStyle","publishedAt","color","name","Component","StyleSheet","create","marginTop"],"mappings":"iuBAGqBA,E,gCACnB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,IA4BRC,gBAAgB,SAACC,GACf,EAAKC,SAAS,CAACC,OAAOF,KA9BL,EAiCnBG,QAAQ,WACN,EAAKC,aA/BL,EAAKC,MAAQ,CACXC,KAAM,GACNC,WAAW,EAEXL,OAAO,MAPQ,E,qCAYnB,8BAAAM,EAAAC,OAAA,gEAEQC,EAAM,gDAAgDC,KAAKN,MAAMH,OAAO,2CAFhF,WAAAM,EAAA,MAG2BI,MAAMF,IAHjC,cAGUG,EAHV,kBAAAL,EAAA,MAIuBK,EAASC,QAJhC,OAIUA,EAJV,OAKIH,KAAKV,SAAS,CAAEK,KAAMQ,EAAKC,WAL/B,kDAOIC,QAAQC,IAAR,MAPJ,yBASIN,KAAKV,SAAS,CAAEM,WAAW,IAT/B,sF,+BAaA,WACEI,KAAKP,c,oBAWP,WAAU,IAAD,OACP,EAA4BO,KAAKN,MAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAEd,OACE,kBAAC,IAAD,CAAMW,MAAO,CAAEC,KAAM,EAAGC,QAAS,KAEvC,kBAAC,IAAD,CAAMF,MAAO,CAACE,QAAS,GAAIC,SAAU,KAArC,uBAIM,kBAAC,IAAD,CACEH,MAAO,CAACI,OAAQ,GAAGC,gBAAgB,WACnCC,YAAY,sCACZC,aAAc,SAACzB,GAAD,OAAQ,EAAKD,gBAAgBC,IAC3C0B,MAAOf,KAAKN,MAAMH,SAG1B,kBAAC,IAAD,CACUgB,MAAOS,EAAOC,OACdC,QAAS,kBAAI,EAAK1B,YAElB,kBAAC,IAAD,oBAGDI,EAAY,kBAAC,IAAD,MACX,kBAAC,IAAD,CACED,KAAMA,EACNwB,aAAc,WAASC,GAAT,SAAGC,IACjBC,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,KAED,kBAAC,IAAD,CAAMhB,MAAO,CAACiB,WAAW,WACxB,kBAAC,IAAD,CACAjB,MAAO,CAACkB,MAAM,IAAId,OAAO,KACzBe,OAAQ,CAACC,IAAKJ,EAAKK,eAGpB,kBAAC,IAAD,CAAMrB,MAAO,CAACG,SAAS,GAAGmB,UAAU,WAAeN,EAAKO,OACxD,kBAAC,IAAD,CAAMvB,MAAO,CAACG,SAAS,GAAGmB,UAAU,YAAgBN,EAAKQ,aACzD,kBAAC,IAAD,CAAMxB,MAAO,CAACG,SAAS,GAAGmB,UAAU,YAAgBN,EAAKS,SAEzD,kBAAC,IAAD,CAAMzB,MAAO,CAACG,SAAS,GAAGuB,UAAU,WAAeV,EAAKW,aACxD,kBAAC,IAAD,CAAM3B,MAAO,CAACG,SAAS,GAAGyB,MAAM,SAAaZ,EAAKG,OAAOU,e,GAhFrCC,aA2F3BrB,EAASsB,IAAWC,OAAO,CAE/BtB,OAAQ,CACNO,WAAY,SACZZ,gBAAiB,UACjBH,QAAS,GACT+B,UAAU,O","file":"static/js/app.1026b38d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ActivityIndicator, FlatList, Text, View,TextInput,StyleSheet,TouchableOpacity,Image } from 'react-native';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true,\n\n      szoveg:\"us\"\n\n    };\n  }\n\n  async getMovies() {\n    try {\n      let ugras='https://newsapi.org/v2/top-headlines?country='+this.state.szoveg+'&apiKey=3896d67f06394c548239d21610ab6841'\n      const response = await fetch(ugras);\n      const json = await response.json();\n      this.setState({ data: json.articles });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  szovegvaltoztat=(be)=>{\n    this.setState({szoveg:be})\n  }\n\n  kereses=()=>{\n    this.getMovies()\n  }\n\n  render() {\n    const { data, isLoading } = this.state;\n\n    return (\n      <View style={{ flex: 1, padding: 24 }}>\n\n<Text style={{padding: 10, fontSize: 20}}>\n        Ország kódja:\n      </Text>\n\n      <TextInput\n        style={{height: 40,backgroundColor:\"#e0ccff\"}}\n        placeholder=\"Írd be az ország kódját\"\n        onChangeText={(be) => this.szovegvaltoztat(be)}\n        value={this.state.szoveg}\n      />\n\n<TouchableOpacity\n          style={styles.button}\n          onPress={()=>this.kereses()}\n        >\n          <Text>Keresés</Text>\n        </TouchableOpacity>\n\n        {isLoading ? <ActivityIndicator/> : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <View>\n             \n             <View style={{alignItems:\"center\"}}>\n              <Image\n              style={{width:200,height:200}}\n              source={{uri: item.urlToImage}}\n            />\n            </View>\n             <Text style={{fontSize:25,textAlign:\"center\"}}   >{item.title}</Text>\n             <Text style={{fontSize:20,textAlign:\"justify\"}}   >{item.description}</Text>\n             <Text style={{fontSize:15,textAlign:\"justify\"}}   >{item.content}</Text>\n\n             <Text style={{fontSize:12,fontStyle:\"italic\"}}   >{item.publishedAt}</Text>\n             <Text style={{fontSize:12,color:\"blue\"}}   >{item.source.name}</Text>\n            </View>\n            )}\n          />\n        )}\n      </View>\n    );\n  }\n};\n\n\nconst styles = StyleSheet.create({\n \n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n    marginTop:10\n  }\n});\n"],"sourceRoot":""}