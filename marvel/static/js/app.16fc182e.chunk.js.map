{"version":3,"sources":["App.js"],"names":["FetchExample","props","szavazat","szam","bemenet","bevitel1","fetch","method","body","JSON","stringify","headers","then","x","text","y","alert","state","isLoading","response","json","responseJson","setState","dataSource","catch","error","console","this","style","flex","padding","paddingTop","data","renderItem","item","color","fontSize","textAlign","marginTop","marginBottom","film_cim","source","uri","film_kep","width","height","marginLeft","marginRight","styles","kekgomb","onPress","a","async","film_id","fontWeight","keyExtractor","index","React","Component","StyleSheet","create","alignItems","backgroundColor"],"mappings":"0tBAGqBA,E,gCAEnB,WAAYC,GAAO,IAAD,sBAChB,cAAMA,IAIRC,SAAS,SAACC,GAER,IAAIC,EAAQ,CACVC,SAASF,GAGbG,MAAM,iDAAkD,CACpDC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CAAC,eAAgB,qCAI7BC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GAAC,OAAIC,MAAMD,OAjBf,EAAKE,MAAO,CAAEC,WAAW,GAFT,E,6CAwBlB,WAAoB,IAAD,OACjB,OAAOZ,MAAM,sCACVM,MAAK,SAACO,GAAD,OAAcA,EAASC,UAC5BR,MAAK,SAACS,GAEL,EAAKC,SAAS,CACZJ,WAAW,EACXK,WAAYF,IACX,kBAKJG,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,oBAMpB,WAAS,IAAD,OAEN,OAAGE,KAAKV,MAAMC,UAEV,kBAAC,IAAD,CAAMU,MAAO,CAACC,KAAM,EAAGC,QAAS,KAC9B,kBAAC,IAAD,OAMJ,kBAAC,IAAD,CAAMF,MAAO,CAACC,KAAM,EAAGE,WAAW,KAChC,kBAAC,IAAD,CACEC,KAAML,KAAKV,MAAMM,WACjBU,WAAY,gBAAEC,EAAF,EAAEA,KAAF,OAEZ,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMN,MAAO,CAACO,MAAM,QAAQC,SAAS,GAAGC,UAAU,SAASC,UAAU,GAAGC,aAAa,IAAQL,EAAKM,SAAlG,KACA,kBAAC,IAAD,CAAQC,OAAQ,CAACC,IAAK,iCAAiCR,EAAKS,UAAWf,MAAO,CAACgB,MAAM,IAAIC,OAAO,IAAIC,WAAW,OAAOC,YAAY,UAElI,kBAAC,IAAD,CACFnB,MAAOoB,EAAOC,QACdC,QAAS,oBAAAC,EAAAC,OAAA,yEAAU,EAAKlD,SAASgC,EAAKmB,UAA7B,8DAET,kBAAC,IAAD,CAAMzB,MAAO,CAACO,MAAM,QAAQmB,WAAW,OAAOlB,SAAS,KAAvD,oBAOEmB,aAAc,WAAYC,GAAZ,SAAEH,gB,GA7EgBI,IAAMC,WAoF1CV,EAASW,IAAWC,OAAO,CAE/BX,QAAS,CACPY,WAAY,SACZC,gBAAiB,OACjBhC,QAAS,GACTc,MAAM,IACNE,WAAW,OACXC,YAAY,W","file":"static/js/app.16fc182e.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, FlatList, ActivityIndicator, Text, View, Image , TouchableOpacity } from 'react-native';\n\nexport default class FetchExample extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={ isLoading: true}\n  }\n\n  szavazat=(szam)=>{\n    //alert(szam)\n    var bemenet={\n      bevitel1:szam\n    }\n\n  fetch(\"https://s1.siralycore.hu:8083/szavazatfelvitel\", {\n      method: \"POST\",\n      body: JSON.stringify(bemenet),\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n    }\n  \n  )\n  .then(x => x.text())\n  .then(y => alert(y));\n\n  }\n\n\n  componentDidMount(){\n    return fetch('https://s1.siralycore.hu:8083/film')\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n        }, function(){\n\n        });\n\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n\n\n\n  render(){\n\n    if(this.state.isLoading){\n      return(\n        <View style={{flex: 1, padding: 20}}>\n          <ActivityIndicator/>\n        </View>\n      )\n    }\n\n    return(\n      <View style={{flex: 1, paddingTop:20}}>\n        <FlatList\n          data={this.state.dataSource}\n          renderItem={({item}) => \n\n          <View >\n          <Text style={{color:\"brown\",fontSize:20,textAlign:\"center\",marginTop:15,marginBottom:5}}   >{item.film_cim} </Text>\n          <Image  source={{uri: 'https://s1.siralycore.hu:8083/'+item.film_kep}} style={{width:300,height:300,marginLeft:\"auto\",marginRight:\"auto\"}} />  \n\n          <TouchableOpacity\n        style={styles.kekgomb}\n        onPress={async ()=>this.szavazat(item.film_id)}\n      >\n        <Text style={{color:\"white\",fontWeight:\"bold\",fontSize:15}}  >Erre szavazok</Text>\n      </TouchableOpacity>\n          </View>\n        \n        }\n\n        \n          keyExtractor={({film_id}, index) => film_id}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  \n  kekgomb: {\n    alignItems: \"center\",\n    backgroundColor: \"blue\",\n    padding: 10,\n    width:300,\n    marginLeft:\"auto\",\n    marginRight:\"auto\",\n  }\n});"],"sourceRoot":""}